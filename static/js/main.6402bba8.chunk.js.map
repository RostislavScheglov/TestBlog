{"version":3,"sources":["assets/collection.js","redux/getPostsAction.js","redux/deletePostAction.js","redux/getPostData.js","redux/getPostAction.js","components/AllPosts.js","redux/createPostAction.js","components/Header.js","redux/updatePostAction.js","components/UpdateForm.js","components/ComponentsWrapper.js","redux/createComment.js","components/SpecificPost.js","App.js","reportWebVitals.js","redux/postsReducer.js","redux/store.js","index.js"],"names":["collectionImg","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getPostsAction","dispatch","a","axios","get","res","type","payload","data","deletePostAction","id","delete","getPostData","title","body","document","getElementById","value","payloadId","getSpecificPostAction","payloadTitle","payloadBody","payloadComments","comments","AllPosts","props","useDispatch","useEffect","allPosts","useSelector","state","postsReducer","posts","map","item","className","src","Math","random","alt","to","onClick","setTimeout","openModalUpdate","createNewPostAction","post","Header","openModal","placeholder","querySelector","closeModal","createNewPost","updatePostAction","put","UpdatePostForm","postId","closeModalUpdate","updatePost","ComponentsWrapper","style","display","createNewCommentAction","SpecificPost","postTitle","postBody","mapedComments","comment","window","location","href","deletePost","bodyText","commentPost","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","middleware","thunk","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6402bba8.chunk.js","sourcesContent":["export let collectionImg= ['/collection/content_img_1.png','/collection/content_img_2.png',\r\n'/collection/content_img_3.png','/collection/content_img_4.png','/collection/content_img_5.png',\r\n'/collection/content_img_6.png','/collection/content_img_7.png','/collection/content_img_8.png',\r\n'/collection/content_img_9.png','/collection/content_img_10.png','/collection/content_img_11.png',\r\n'/collection/content_img_12.png','/collection/content_img_13.png','/collection/content_img_14.png',\r\n'/collection/content_img_15.png','/collection/content_img_16.png',]\r\n\r\nexport let date = new Date();\r\nlet dd = String(date.getDate()).padStart(2, '0');\r\nlet mm = String(date.getMonth() + 1).padStart(2, '0'); \r\nlet yyyy = date.getFullYear();\r\n\r\ndate = dd + '/' + mm + '/' + yyyy;\r\n\r\n","import axios from \"axios\"\r\n\r\n const getPostsAction = () =>{\r\n    return async dispatch=>{\r\n        let res = await axios.get('https://bloggy-api.herokuapp.com/posts')\r\n\r\n        dispatch({\r\n            type:'GET_POSTS',\r\n            payload:res.data\r\n        })\r\n    }\r\n}\r\nexport default getPostsAction;","import axios from \"axios\";\r\n\r\nconst deletePostAction = (id) =>{\r\n    return async dispatch=>{\r\n       axios.delete('https://bloggy-api.herokuapp.com/posts/'+id,{\r\n      })\r\n        dispatch({\r\n            type:'DELETE_POST',\r\n            \r\n        })\r\n    }\r\n}\r\nexport default deletePostAction;\r\n","const getPostData = (title, body,id) =>{\r\n    document.getElementById('update_post_form_input_title').value =title\r\n    document.getElementById('update_post_form_input_body').value = body\r\n    return{\r\n            type:'GET_POST_DATA',\r\n            payloadId:id\r\n    }\r\n }\r\nexport default getPostData;","import axios from \"axios\"\r\n\r\n const getSpecificPostAction = (id) =>{\r\n    return async dispatch=>{\r\n        let res = await axios.get('https://bloggy-api.herokuapp.com/posts/'+id+'?_embed=comments');\r\n\r\n        dispatch({\r\n            type:'GET_SPECIFIC_POST',\r\n            payloadTitle: res.data.title,\r\n            payloadBody:res.data.body,\r\n            payloadId:res.data.id,\r\n            payloadComments:res.data.comments,\r\n        })\r\n    }\r\n}\r\nexport default getSpecificPostAction;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {collectionImg, date} from '../assets/collection';\r\nimport getPostsAction from '../redux/getPostsAction';\r\nimport deletePostAction from '../redux/deletePostAction';\r\nimport getPostData from '../redux/getPostData';\r\nimport getSpecificPostAction from '../redux/getPostAction';\r\nimport \"../styles/mainStyle.css\";\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst AllPosts =(props)=>{\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n      dispatch(getPostsAction())\r\n    },[])\r\n\r\n    function deletePost(id){\r\n        dispatch(deletePostAction(id))\r\n        setTimeout(()=>dispatch(getPostsAction()),200)\r\n    }\r\n    \r\n   \r\n\r\n    function updatePost(title,body,id){\r\n        dispatch(getPostData(title, body, id))\r\n        props.openModalUpdate()\r\n    }\r\n\r\n    const posts = useSelector(state => state.postsReducer.posts);\r\n\r\n    let allPosts = posts.map(item=>(\r\n        <div className=\"postItem\" key ={item.id} > \r\n         <img className=\"contentImg\" src={collectionImg[Math.random()*16|0]}   alt=\"Content Img\"/>\r\n         <div className=\"contentWrapper\">\r\n            <NavLink to={`/SpecificPost`} >\r\n                <div onClick={()=>dispatch(getSpecificPostAction(item.id))}>\r\n                <div className=\"Date\">{date}</div>\r\n                <p className=\"formTitle\" key ={item.id + 1}>{item.title}</p>\r\n                <p className=\"formBody\" key ={item.id + 2}>{item.body}</p>\r\n                </div>\r\n            </NavLink>\r\n    <button className=\"deleteBtn\" onClick={()=>deletePost(item.id) } ></button>\r\n    <button className=\"updateBtn\" onClick={()=> updatePost(item.title, item.body, item.id)} ></button>\r\n  </div>\r\n  </div>\r\n  ))\r\n    \r\n\r\n\r\n\r\n\r\n     return(\r\n      <div className=\"wrapper\">\r\n         {allPosts}\r\n      </div>\r\n     );\r\n     }\r\n \r\n \r\n export default AllPosts;","import axios from \"axios\"\r\n\r\n const createNewPostAction = (title, body) =>{\r\n    return async dispatch=>{\r\n      await axios.post('https://bloggy-api.herokuapp.com/posts',{\r\n            'title': title,\r\n            'body' : body\r\n      })\r\n      \r\n        dispatch({\r\n            type:'CREATE_NEW_POST',\r\n        })\r\n    }\r\n}\r\nexport default createNewPostAction;","import \"../styles/mainStyle.css\";\r\nimport { useDispatch} from 'react-redux';\r\nimport createNewPostAction from '../redux/createPostAction';\r\nimport getPostsAction from '../redux/getPostsAction';\r\nconst Header =(props)=>{\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function createNewPost () {\r\n            let title = (document.querySelector('#create_new_post_form_input_title')).value\r\n            let body = (document.querySelector('#create_new_post_form_input_body')).value\r\n            dispatch(createNewPostAction(title,body))\r\n            setTimeout(()=>dispatch(getPostsAction()),200)\r\n            props.closeModal()\r\n          }\r\n\r\n\r\n     return(\r\n        <div>\r\n         <nav className = \"navig\">\r\n                <div className=\"navigContainer\">\r\n                    <div className=\"linkContainer\">\r\n                    </div>\r\n                <button id=\"createPost_button_create\" onClick={()=> props.openModal()} >Create New Post</button>\r\n                </div>\r\n            </nav>\r\n\r\n        <div id = 'modalForm' className=\"create_post_form_modal\" >\r\n            <div id=\"create_post_form\">\r\n                <h2>Create New Post</h2>\r\n                <input id=\"create_new_post_form_input_title\" className=\"createPost_input_title\" \r\n                    type = 'text' placeholder=\"Post Title\" />\r\n                <input id=\"create_new_post_form_input_body\" className=\"createPost_input_body\" \r\n                    type = 'text' placeholder=\"Post Body\" />\r\n\r\n                <button type='submit' id=\"createPost_button_submit\" \r\n                    onClick={()=> createNewPost()} >Submit</button>\r\n\r\n                <button id=\"createPost_button_cancel\" \r\n                    onClick={()=> props.closeModal()} >Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n     );\r\n \r\n     }\r\n\r\n export default Header;","import axios from \"axios\"\r\n\r\n const updatePostAction = (title, body, id) =>{\r\n    return async dispatch=>{   \r\n      await axios.put('https://bloggy-api.herokuapp.com/posts/'+id,{\r\n            'title': title,\r\n            'body' : body\r\n      })\r\n      \r\n        dispatch({\r\n            type:'UPDATE_POST',\r\n        })\r\n    }\r\n}\r\nexport default updatePostAction;","import { useDispatch, useSelector } from 'react-redux';\r\nimport getPostsAction from '../redux/getPostsAction';\r\nimport updatePostAction from \"../redux/updatePostAction\";\r\nimport \"../styles/mainStyle.css\";\r\n\r\nconst UpdatePostForm =(props)=>{\r\n    \r\n    const dispatch = useDispatch()\r\n    const postId= useSelector(state => state.postsReducer.postId);\r\n\r\n    function updatePost (id){\r\n        let title = document.getElementById('update_post_form_input_title').value\r\n        let body = document.getElementById('update_post_form_input_body').value\r\n        dispatch(updatePostAction(title,body,id))\r\n        setTimeout(()=>dispatch(getPostsAction()),200)\r\n        props.closeModalUpdate()\r\n    }\r\n     return(\r\n        <div id = 'updatePostModalForm' className=\"create_post_form_modal\" >\r\n         <div id=\"create_post_form\">\r\n            <h2>Update New Post</h2>\r\n            <input id=\"update_post_form_input_title\" className=\"createPost_input_title\" \r\n                type = 'text' placeholder=\"Post Title\"/>\r\n            <input id=\"update_post_form_input_body\" className=\"createPost_input_body\" \r\n                type = 'text' placeholder=\"Post Body\"/>\r\n            <button type='submit' id=\"createPost_button_submit\" \r\n                onClick={()=> updatePost(postId)}>Submit</button> \r\n             <button id=\"createPost_button_cancel\" \r\n                onClick={()=> props.closeModalUpdate()} >Cancel</button>\r\n         </div>\r\n        </div>\r\n     );\r\n }\r\n \r\n \r\n export default UpdatePostForm;","import AllPosts from \"./AllPosts\";\r\nimport Header from \"./Header\"\r\nimport UpdatePostForm from \"./UpdateForm\";\r\n\r\n\r\n\r\nconst ComponentsWrapper =()=>{\r\n\r\n\r\nfunction openModal() {\r\n        let modal = document.getElementById('modalForm')\r\n        modal.style.display = 'block'\r\n}\r\n\r\nfunction closeModal() {\r\n    let modal = document.getElementById('modalForm')\r\n    modal.style.display = 'none'\r\n}\r\nfunction openModalUpdate() {\r\n    let modal = document.getElementById('updatePostModalForm')\r\n    modal.style.display = 'block'\r\n}\r\n\r\nfunction closeModalUpdate() {\r\nlet modal = document.getElementById('updatePostModalForm')\r\nmodal.style.display = 'none'\r\n}\r\n\r\nreturn(\r\n         <>\r\n            <Header openModal={openModal} closeModal={closeModal} />\r\n            <AllPosts  openModalUpdate={openModalUpdate}  />\r\n            <UpdatePostForm closeModalUpdate={closeModalUpdate} />\r\n        </>\r\n     );\r\n \r\n}\r\n\r\n export default ComponentsWrapper;","import axios from \"axios\"\r\n\r\n const createNewCommentAction = (id, body) =>{\r\n    return async dispatch=>{\r\n      await axios.post('https://bloggy-api.herokuapp.com/comments',{\r\n            'postId': id,\r\n            'body' : body\r\n      })\r\n      \r\n        dispatch({\r\n            type:'CREATE_NEW_COMMENT',\r\n        })\r\n    }\r\n}\r\nexport default createNewCommentAction;","import { useDispatch, useSelector } from 'react-redux';\r\nimport deletePostAction from '../redux/deletePostAction'\r\nimport getSpecificPostAction from '../redux/getPostAction'\r\nimport \"../styles/mainStyle.css\";\r\nimport {collectionImg, date} from '../assets/collection';\r\nimport { NavLink} from 'react-router-dom';\r\nimport createNewCommentAction from '../redux/createComment';\r\n\r\nconst SpecificPost =(props)=>{\r\n\r\n    const id = useSelector(state => state.postsReducer.postId);\r\n    const title = useSelector(state => state.postsReducer.postTitle);\r\n    const body = useSelector(state => state.postsReducer.postBody);\r\n    const comments = useSelector(state => state.postsReducer.comments);\r\n\r\n    const dispatch = useDispatch()\r\n    let mapedComments = comments.map(comment=>(<p className=\"comment\" key={comment.id}>{comment.body}</p>))\r\n\r\n    function deletePost(id){\r\n      dispatch(deletePostAction(id))\r\n      setTimeout(()=>(window.location.href=\"/\"),200)\r\n    }\r\n\r\n    function commentPost(){\r\n        let bodyText = document.getElementById('update_post_form_input_body').value\r\n        dispatch(createNewCommentAction(id,bodyText));\r\n        setTimeout(()=>dispatch(getSpecificPostAction (id)),300)\r\n        document.getElementById('update_post_form_input_body').value = ''\r\n    }\r\n\r\n     return(\r\n      <div className =\"specificWrapper\">\r\n        <NavLink to=\"/\" className=\"linkBack\">Back to all posts</NavLink>\r\n        <div className=\"specififcpostItem\" > \r\n        <img className=\"contentImg\" src={collectionImg[Math.random()*16|0]}   alt=\"Content Img\"/>\r\n            <div className=\"contentWrapper\">\r\n              <div>\r\n                <div className=\"Date\">{date}</div>\r\n                <p className=\"formTitle\" >{title}</p>\r\n                <p className=\"formBody\" >{body}</p>\r\n                <div className=\"comments\">Commments:{mapedComments}</div>\r\n              </div>\r\n            <button className=\"deleteBtnSpecific\" onClick={()=>deletePost(id) } ></button>\r\n            </div>\r\n         </div>\r\n\r\n         <div id=\"create_comment_form\">\r\n            <h2 className=\"create_comment_title\">Create New Comment</h2>\r\n            <input id=\"update_post_form_input_body\" className=\"createComment_input_body\" \r\n                type = 'text' placeholder=\"Comment\"/>\r\n            <button type='submit' id=\"createPost_button_submit\" \r\n              onClick={()=>commentPost()}>Submit</button> \r\n             <button id=\"createPost_button_cancel\" \r\n              onClick={()=> props.closeModalUpdate()}>Cancel</button>\r\n         </div>\r\n\r\n      </div>\r\n     );\r\n     }\r\n \r\n \r\n export default SpecificPost;","import ComponentsWrapper from \"./components/ComponentsWrapper\";\nimport {HashRouter, Route} from 'react-router-dom'\nimport SpecificPost from '../src/components/SpecificPost';\n\n\nfunction App() {\n  return (\n    <HashRouter basename='rostislavscheglov.github.io/TestBlog/'>\n      <div className=\"App\">\n        <Route  exact path=\"/\" component={ComponentsWrapper}/>\n        <Route path=\"/SpecificPost\" component={SpecificPost}/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    posts:[],\r\n    comments:[],\r\n    postId:[],\r\n    postTitle:[],\r\n    postBody:[],\r\n }\r\n   \r\n    function postsReducer (state = initialState, action) {\r\n \r\n         switch (action.type) {\r\n                   case 'GET_POSTS':\r\n                     return {\r\n                      ...state,\r\n                      posts: action.payload\r\n                     }\r\n                   case 'GET_SPECIFIC_POST': {\r\n                     return{\r\n                        ...state,\r\n                        postTitle:action.payloadTitle,\r\n                        postBody:action.payloadBody,\r\n                        postId:action.payloadId,\r\n                        comments:action.payloadComments\r\n                     }\r\n                  }\r\n                   case 'CREATE_NEW_POST': {\r\n                      return{\r\n                         ...state,\r\n                      }\r\n                   }\r\n                   case 'CREATE_NEW_COMMENT': {\r\n                     return{\r\n                        ...state,\r\n                     }\r\n                  }\r\n                   case 'DELETE_POST': {\r\n                      return {\r\n                         ...state\r\n                      }\r\n                  }\r\n                case 'GET_POST_DATA': {\r\n                  return{\r\n                     ...state,\r\n                     postTitle:action.payloadTitle,\r\n                     postBody:action.payloadBody,\r\n                     postId:action.payloadId\r\n                  }\r\n               }\r\n                case 'UPDATE_POST': {\r\n                   return{\r\n                      ...state,\r\n                   }\r\n               }\r\n                   default:\r\n                      return state\r\n               }\r\n \r\n \r\n }   \r\n \r\n \r\n export default postsReducer;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport{composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from \"redux-thunk\";\r\nimport postsReducer from './postsReducer';\r\n\r\nconst middleware = [thunk]\r\n\r\nconst reducers = combineReducers ({\r\n    postsReducer: postsReducer,\r\n\r\n})\r\n\r\n\r\nconst store = createStore(reducers,composeWithDevTools(\r\n    applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}